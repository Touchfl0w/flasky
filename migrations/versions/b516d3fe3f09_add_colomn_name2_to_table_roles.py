"""add colomn name2 to table roles

Revision ID: b516d3fe3f09
Revises: e77f78bde529
Create Date: 2018-08-14 13:11:28.321998

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b516d3fe3f09'
down_revision = 'e77f78bde529'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name2', sa.String(length=64), nullable=True))
        batch_op.create_unique_constraint(batch_op.f('uq_roles_name'), ['name'])
        batch_op.create_unique_constraint(batch_op.f('uq_roles_name1'), ['name1'])
        batch_op.create_unique_constraint(batch_op.f('uq_roles_name2'), ['name2'])
        batch_op.drop_constraint('uq_roles_id', type_='unique')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_users_name555'), ['name555'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_users_name555'), type_='unique')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_roles_id', ['name1'])
        batch_op.drop_constraint(batch_op.f('uq_roles_name2'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_roles_name1'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_roles_name'), type_='unique')
        batch_op.drop_column('name2')

    # ### end Alembic commands ###
